/* 이론
1.
1) 테이블
2) 외래키(FK)
3) 널(NULL)

2-2
1) 문자셋(CharacterSet)
2) 문자셋(CharSet)

2-3.
1) VARCHAR2(N)
2) CHAR(N)

2-4.
1) 제약조건
2) 기본키
3) 외래키

2-5.
1) 무결성(Integrity)
2) 무결성
3) 무결성

2-6.
1) Unique
2) Not Null
3) Index
 * 
 */

--실습
--1-1.
SELECT e.DEPTNO 
		, ROUND(AVG(SAL), 0)
		, MAX(SAL)
		, MIN(SAL)
		, COUNT(ENAME)
  FROM EMP e
GROUP BY e.DEPTNO 
ORDER BY e.DEPTNO DESC;

--1-2.
SELECT JOB, COUNT(*)
  FROM EMP 
GROUP BY JOB
HAVING COUNT(JOB) >= 3;

--1-3.
SELECT HIRE_YEAR, DEPTNO, COUNT(*) AS CNT
  FROM (SELECT TO_CHAR(HIREDATE, 'YYYY') AS HIRE_YEAR, DEPTNO
  FROM EMP)
GROUP BY HIRE_YEAR, DEPTNO;

--1-4.
SELECT EXIST_COMM, COUNT(*) AS CNT
  FROM (SELECT NVL2(COMM, 'Y', 'N') AS EXIST_COMM
  FROM EMP e)
GROUP BY EXIST_COMM;

--1-5.
SELECT DEPTNO, 
		, EXTRACT(YEAR FROM HIREDATE) AS "HIRE_YEAR"
		, COUNT(*) AS "CNT"
		, MAX(SAL)
		, SUM(SAL)
		, AVG(SAL)
FROM EMP 
GROUP BY ROLLUP (DEPTNO, EXTRACT(YEAR FROM HIREDATE))
ORDER BY DEPTNO;

--2-1
--ORACLE 방식
SELECT A.DEPTNO, B.DNAME, A.EMPNO, A.ENAME, A.SAL
  FROM EMP A, DEPT B
 WHERE A.DEPTNO  = B.DEPTNO 
  AND SAL>2000;

--표준화된 방식
SELECT A.DEPTNO, B.DNAME, A.EMPNO, A.ENAME, A.SAL
FROM EMP A JOIN DEPT B
ON A.DEPTNO  = B.DEPTNO 
WHERE SAL>2000;

--2-2
SELECT DEPTNO
		, DNAME
		, TRUNC(AVG(SAL),0)
		, MAX(SAL)
		, MIN(SAL)
		, COUNT(EMPNO)
FROM EMP NATURAL JOIN DEPT
GROUP BY DEPTNO, DNAME ;


--2-3
SELECT A.DEPTNO
		, B.DNAME
		, A.EMPNO
		, A.ENAME
		, A.JOB
		, A.SAL
  FROM EMP A RIGHT JOIN DEPT B
    ON A.DEPTNO = B.DEPTNO 
ORDER BY 1
;

--2-4
SELECT d.DEPTNO
      , d.DNAME 
      , e1.EMPNO 
      , e1.ENAME
      , e1.MGR
      , e1.SAL
      , e1.DEPTNO
      , s.LOSAL
      , s.HISAL
      , s.GRADE
      , e1.MGR AS MGR_EMPNO
      , e2.ENAME AS MGR_NAME
  FROM EMP e1 LEFT JOIN EMP e2 ON e1.MGR = e2.EMPNO
             LEFT JOIN SALGRADE s ON e1.SAL >= s.LOSAL AND e1.SAL <= s.HISAL
             RIGHT JOIN DEPT d ON e1.DEPTNO = d.DEPTNO
ORDER BY 1, 3;


--3-1
SELECT e.job
		,  e.empno
		, e.ename
		, e.sal
		, d.deptno
		, d.dname
  FROM emp e JOIN dept d 
    ON e.deptno = d.deptno
 WHERE e.job = (SELECT job FROM emp WHERE ename = 'ALLEN')
;


--3-2
SELECT E.EMPNO, E.ENAME, D.DNAME, E.HIREDATE, D.LOC, E.SAL, S.GRADE
  FROM EMP E JOIN DEPT D ON E.DEPTNO = D.DEPTNO
             JOIN SALGRADE S ON E.SAL BETWEEN S.LOSAL AND S.HISAL
WHERE E.SAL > (SELECT AVG(SAL) FROM EMP);

--3-3
SELECT A.EMPNO
		, A.ENAME
		, A.JOB
		, A.DEPTNO
		, B.DNAME
		, B.LOC
  FROM EMP A ,DEPT B
 WHERE A.DEPTNO = B.DEPTNO
   AND A.DEPTNO = 10
   AND A.JOB NOT IN (SELECT JOB FROM EMP WHERE DEPTNO = 30);

--3-4
SELECT E.EMPNO
		, E.ENAME
		, E.SAL
		, S.GRADE
  FROM EMP E JOIN SALGRADE S ON E.SAL BETWEEN S.LOSAL AND S.HISAL 
WHERE SAL > (SELECT MAX(SAL) FROM EMP WHERE JOB IN ('SALESMAN') GROUP BY JOB);


--3-5 
SELECT E.EMPNO
		, E.ENAME
		, E.SAL
		, S.GRADE
  FROM EMP E JOIN SALGRADE S ON E.SAL BETWEEN S.LOSAL AND S.HISAL 
WHERE SAL > ALL(SELECT SAL FROM EMP WHERE JOB IN ('SALESMAN'));

